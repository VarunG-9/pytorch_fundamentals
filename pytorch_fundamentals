{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4417,"status":"ok","timestamp":1715407571864,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"knXAnAslFDg0","outputId":"70222b23-8085-4037-af88-ad0155de943c"},"outputs":[{"name":"stdout","output_type":"stream","text":["2.2.1+cu121\n"]}],"source":["import torch\n","import pandas as pd\n","import numpy as nd\n","import matplotlib.pyplot as plt\n","print(torch.__version__)"]},{"cell_type":"markdown","metadata":{"id":"4pICODHnGlGQ"},"source":["# Creating Tensors"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1715407571864,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"dqltfMSNGep8","outputId":"79f166af-e155-4e3e-9e50-77bcbb80ba04"},"outputs":[{"data":{"text/plain":["tensor(7)"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["# scalar\n","# Create tensors using torch.tensor()\n","\n","scalar = torch.tensor(7)\n","scalar"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1715407571864,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"VRKlcIoFHm_M","outputId":"c4afa26e-b18c-40af-b876-de00709b74d0"},"outputs":[{"data":{"text/plain":["0"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["scalar.ndim"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1715407571864,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"NitQhtqrHrqE","outputId":"e6397305-e16e-4ed5-dca8-6571a510637e"},"outputs":[{"data":{"text/plain":["7"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["# Get tensor back as python int\n","scalar.item()"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1715407571864,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"RTVqgpC6Hwri","outputId":"4683abf6-fd0c-49d1-b826-039b1a0519d3"},"outputs":[{"data":{"text/plain":["tensor([7, 7])"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["# Vector\n","\n","vector = torch.tensor([7, 7])\n","vector"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"LLD0QllEID3z","outputId":"944738ee-49b6-4d6c-b35d-c0879586958d"},"outputs":[{"data":{"text/plain":["1"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["vector.ndim"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":20,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"PQdLAZ_aIskx"},"outputs":[],"source":["matrix = torch.tensor([[7,8],\n","                      [8,9]])"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"2ZWd6R5bI-Rk","outputId":"d16426bb-b975-423f-966c-a71a648ea2fc"},"outputs":[{"data":{"text/plain":["torch.Size([2, 2])"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["matrix.shape"]},{"cell_type":"markdown","metadata":{"id":"1rBITpRlKd5g"},"source":["# Random Tensors"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"tI1kLHYaKgP5"},"outputs":[],"source":["# We use random tensors as the tensors/weights start with random numbers and\n","# update themselves"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"CO5-LfhEKrat","outputId":"14b1f810-6b70-4420-ffa9-e4593e6c407b"},"outputs":[{"data":{"text/plain":["tensor([[0.0576, 0.9650, 0.0590, 0.7232],\n","        [0.2660, 0.9165, 0.7036, 0.6762],\n","        [0.7991, 0.6839, 0.2544, 0.4664]])"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["# Create a random tensor of size (3, 4)\n","random_tensor = torch.rand(3, 4)\n","random_tensor"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"k_PyEJIFLaN0","outputId":"54eb7f10-ccbf-4aea-cba8-05b4de6b34af"},"outputs":[{"data":{"text/plain":["(torch.Size([224, 224, 3]), 3)"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["# Create a random tensor with similar shape to an image tensor\n","# Height, Width, Colour Channels(RGB)\n","random_image_size_tensor = torch.rand(size=(224, 224, 3))\n","random_image_size_tensor.shape, random_image_size_tensor.ndim"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"riY4weZTLaLo","outputId":"4e298457-ca0f-447b-8e1b-fe40597da2cb"},"outputs":[{"data":{"text/plain":["tensor([[0., 0., 0., 0.],\n","        [0., 0., 0., 0.],\n","        [0., 0., 0., 0.]])"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["zeros = torch.zeros(size=(3, 4))\n","zeros"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1715407571865,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"xwfs2k0LMaAd","outputId":"8d352d4e-484d-4b76-c16f-c0697e108e81"},"outputs":[{"data":{"text/plain":["tensor([[1., 1., 1., 1.],\n","        [1., 1., 1., 1.],\n","        [1., 1., 1., 1.]])"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["ones = torch.ones(size=(3,4))\n","ones"]},{"cell_type":"markdown","metadata":{"id":"1kEiF9g4R50R"},"source":["# torch.arange()"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1715407571866,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"BnzKPMGKR80O","outputId":"2afe5a1b-f845-4c5c-9fee-24a730203fda"},"outputs":[{"data":{"text/plain":["tensor([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["one_to_ten = torch.arange(1, 11)\n","one_to_ten"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1715407571866,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"Qi10pxvfSRCc","outputId":"4586d5fd-bc4a-4078-a851-7503f704049a"},"outputs":[{"data":{"text/plain":["tensor([  0,  77, 154, 231, 308, 385, 462, 539, 616, 693, 770, 847, 924])"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["arange_example = torch.arange(start=0, end=1000, step=77)\n","arange_example"]},{"cell_type":"markdown","metadata":{"id":"oWbIecygSY4-"},"source":["# Creating Tensors LIke"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1715407571866,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"vz-_BT56SbEz","outputId":"5de67e75-97e6-45a2-90f9-94ecc1e190c5"},"outputs":[{"data":{"text/plain":["tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["ten_zeros = torch.zeros_like(input=one_to_ten)\n","ten_zeros"]},{"cell_type":"markdown","metadata":{"id":"2uorQGRWS9Lr"},"source":["# Tensor Datatypes"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1715407571866,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"PCzfXRgwS_UC","outputId":"c9a30edc-c61a-41f3-d0c9-7d06deaccd07"},"outputs":[{"data":{"text/plain":["tensor([3., 6., 9.])"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["# Float 32 tensor\n","# Default datatype is float32.\n","float_32_tensor = torch.tensor([3.0, 6.0, 9.0],\n","                               dtype=None,\n","                               device=None,\n","                               requires_grad=False)\n","float_32_tensor"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1715407571866,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"FWHYcTmsUoaP"},"outputs":[],"source":["# Converting datatype\n","\n","float_16_tensor = float_32_tensor.type(torch.float16)\n","int_32_tensor = torch.tensor([3,6,9], dtype=torch.int32)"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1715407571866,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"oehudyTrVBBs","outputId":"cb91cded-f43c-4bd1-bb21-b26109681784"},"outputs":[{"data":{"text/plain":["tensor([ 9., 36., 81.])"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["float_32_tensor * int_32_tensor"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1553,"status":"ok","timestamp":1715407573412,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"av4WFAMCVxaD","outputId":"9315c8a4-57bc-43f3-8d14-a1ac56e5210f"},"outputs":[{"data":{"text/plain":["tensor([[0.6765, 0.4641, 0.5317, 0.7289],\n","        [0.4903, 0.5614, 0.6010, 0.6143],\n","        [0.1156, 0.1619, 0.7013, 0.8210]], device='cuda:0')"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["some_tensor = torch.rand(size=(3, 4), device='cuda')\n","some_tensor"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":53,"status":"ok","timestamp":1715407573413,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"p-QRM_P1V1rm","outputId":"762e1179-76cd-454f-e93c-24f5c2c7441c"},"outputs":[{"name":"stdout","output_type":"stream","text":["tensor([[0.6765, 0.4641, 0.5317, 0.7289],\n","        [0.4903, 0.5614, 0.6010, 0.6143],\n","        [0.1156, 0.1619, 0.7013, 0.8210]], device='cuda:0')\n","Datatype of tensor: torch.float32\n","Shape of tensor: torch.Size([3, 4])\n","Device tensor is on: cuda:0\n"]}],"source":["# Find out details about some_tensor\n","\n","print(some_tensor)\n","print(f\"Datatype of tensor: {some_tensor.dtype}\")\n","print(f\"Shape of tensor: {some_tensor.shape}\")\n","print(f\"Device tensor is on: {some_tensor.device}\")\n"]},{"cell_type":"markdown","metadata":{"id":"YmBmbeIqW5K-"},"source":["# Manipulating Tensors"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":51,"status":"ok","timestamp":1715407573413,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"ndMptxGsW7h8"},"outputs":[],"source":["# Manipulating tensors\n","# Addition, subtration, multiplication(element-wise and matrix), division"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":50,"status":"ok","timestamp":1715407573413,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"Gzdmo5HIXW0E","outputId":"6b4d64e7-7a61-4663-a5f3-21290375d0a7"},"outputs":[{"data":{"text/plain":["tensor([11, 12, 13])"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["tensor = torch.tensor([1,2,3])\n","tensor + 10\n"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":47,"status":"ok","timestamp":1715407573413,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"T1TtqlceXbU-","outputId":"5789fb69-b928-48d9-d988-3e325a912136"},"outputs":[{"data":{"text/plain":["tensor([10, 20, 30])"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["tensor * 10"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":44,"status":"ok","timestamp":1715407573413,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"PhStDKfdXpTO","outputId":"28e5281c-54ec-41f6-b044-4f822caecf60"},"outputs":[{"data":{"text/plain":["tensor([-9, -8, -7])"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["tensor - 10"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":41,"status":"ok","timestamp":1715407573413,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"BU_hpGcXXuM2","outputId":"8575acd2-2a91-4d1c-bdcb-2451d99e69fd"},"outputs":[{"data":{"text/plain":["tensor([10, 20, 30])"]},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":["# try out pytorch in built functions\n","\n","torch.mul(tensor, 10)"]},{"cell_type":"markdown","metadata":{"id":"yC4pXE4clK0r"},"source":["# Matrix Multiplication (Dot Product)"]},{"cell_type":"code","execution_count":27,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":38,"status":"ok","timestamp":1715407573414,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"B9gzfURDlNYg","outputId":"8b8ab6b4-055d-4b94-fa27-e78aef207fc9"},"outputs":[{"data":{"text/plain":["tensor(14)"]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["tensor = torch.tensor([1,2,3])\n","torch.matmul(tensor, tensor)"]},{"cell_type":"code","execution_count":28,"metadata":{"executionInfo":{"elapsed":35,"status":"ok","timestamp":1715407573414,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"8w0EUFmunsl-"},"outputs":[],"source":["# There are 2 rules that matrix multiplication needs.\n","# 1. Inner dimensions must match. (3,2) and (3,2) will not work.\n","#    (2,3) and (3,2) will work.\n","# 2. The resulting matrix has the shape of the outer dimensions.\n","# (2, 3) @ (3, 2) results in a (2, 2) shape\n"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":34,"status":"ok","timestamp":1715407573414,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"CYqmni3gpPCY","outputId":"65a55e10-0483-45b8-b29f-5e3a3f5f7a82"},"outputs":[{"data":{"text/plain":["tensor([[ 27,  30,  33],\n","        [ 61,  68,  75],\n","        [ 95, 106, 117]])"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["# Shapes for matrix multiplication\n","\n","tensor_A = torch.tensor([[1, 2],\n","                         [3,4],\n","                         [5,6]])\n","\n","tensor_B = torch.tensor([[7, 10],\n","                         [8,11],\n","                         [9,12]])\n","# To fix tensor shape issues, we can manipulate the shape of one tensor\n","tensor_B = tensor_B.T # This reverses the shape of tensor_B\n","# torch.mm can also be used instead of matmul\n","torch.matmul(tensor_A, tensor_B)"]},{"cell_type":"markdown","metadata":{"id":"v3KrkD9irpTA"},"source":["# Finding Min, Max, and Sum of Tensors"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1715407573414,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"g0-vNA83rr66","outputId":"348b9b3a-484d-4abb-d741-e100ea50710c"},"outputs":[{"data":{"text/plain":["torch.int64"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["# Min\n","x = torch.arange(0, 100, 10)\n","x.dtype"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1715407573414,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"cK7hWjyurw_i","outputId":"21f3c839-9563-435d-ff18-360d07262ee8"},"outputs":[{"data":{"text/plain":["(tensor(0), tensor(0))"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["torch.min(x), x.min()"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1715407573414,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"_jfEQrtXrzUa","outputId":"8e08e6e5-7c6d-4850-8747-50fa7c928cba"},"outputs":[{"data":{"text/plain":["(tensor(90), tensor(90))"]},"execution_count":32,"metadata":{},"output_type":"execute_result"}],"source":["torch.max(x), x.max()"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"y9d0ZVuyr12-","outputId":"a7e83326-a885-43e6-cea5-7ef8ba115df6"},"outputs":[{"data":{"text/plain":["(tensor(45.), tensor(45.))"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["# torch.mean requires a tensor of float32 datatype to work\n","torch.mean(x.type(torch.float32)), x.type(torch.float32).mean()"]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"qqcV7tb5slZY","outputId":"cee40064-1130-41a8-92d7-c6bf2cf4edb6"},"outputs":[{"data":{"text/plain":["(tensor(450), tensor(450))"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["torch.sum(x), x.sum()"]},{"cell_type":"markdown","metadata":{"id":"AnPg3RkWsxGX"},"source":["# Finding Positional Mean and Max"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"x-sEu-L_szoR","outputId":"0315f98f-89cf-404c-ee05-9e4c19d3e2c9"},"outputs":[{"name":"stdout","output_type":"stream","text":["tensor(0)\n","tensor(9)\n"]}],"source":["# Find the position in tensor that has the minimum value with argmin.\n","# Returns index position\n","\n","print(x.argmin())\n","print(x.argmax())"]},{"cell_type":"markdown","metadata":{"id":"2pFoaK4rt40n"},"source":["# Reshaping tensors"]},{"cell_type":"code","execution_count":36,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"6tvPlr0Wt7Qe"},"outputs":[],"source":["# Reshaping - Reshapes an input tensor\n","# View - Return a view of an input tensor but keep same memory.\n","# Stacking - Combine multiple tensors on top of each other or side by side\n","# Squeeze - removes all dimensions from a tensor\n","# Unsqueeze - Adds 1 dimension to a target tensor\n","# Permute - Return a view of the input with dimensions permuted (swapped)\n","#           in a certain way."]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"YNFq4Fzyudza","outputId":"67f267ad-af4d-47e7-9391-4cf5e857fc59"},"outputs":[{"data":{"text/plain":["(tensor([1., 2., 3., 4., 5., 6., 7., 8., 9.]), torch.Size([9]))"]},"execution_count":37,"metadata":{},"output_type":"execute_result"}],"source":["import torch\n","\n","x = torch.arange(1., 10.)\n","x, x.shape"]},{"cell_type":"code","execution_count":38,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"luj18HBPu8Ym","outputId":"559cc245-0120-4c16-f56b-938c1b3dbf9b"},"outputs":[{"data":{"text/plain":["torch.Size([9])"]},"execution_count":38,"metadata":{},"output_type":"execute_result"}],"source":["x_reshaped = x.reshape(3,3)\n","x.shape"]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"-N_gxbjSvNQb","outputId":"f6036978-6fe0-43bf-9770-cff7f017c1c4"},"outputs":[{"data":{"text/plain":["(tensor([[1., 2., 3., 4., 5., 6., 7., 8., 9.]]), torch.Size([1, 9]))"]},"execution_count":39,"metadata":{},"output_type":"execute_result"}],"source":["# Change the view:\n","\n","z = x.view(1, 9)\n","z, z.shape"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1715407573415,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"ef9SSu49vf3D","outputId":"f5b08440-3ba0-4df3-db9b-298e356e8fb1"},"outputs":[{"data":{"text/plain":["(tensor([[5., 2., 3., 4., 5., 6., 7., 8., 9.]]),\n"," tensor([5., 2., 3., 4., 5., 6., 7., 8., 9.]))"]},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":["# Changing z changes x, because a view of a tensor shares the same\n","# memory as the original input.\n","\n","z[:, 0] = 5\n","z,x"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1715407695974,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"CJIEpZYFv8Wq","outputId":"2eba2c8f-8bbe-4445-d18b-e2b913ad103a"},"outputs":[{"data":{"text/plain":["tensor([[5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","        [5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","        [5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","        [5., 2., 3., 4., 5., 6., 7., 8., 9.]])"]},"execution_count":41,"metadata":{},"output_type":"execute_result"}],"source":["x_stacked = torch.stack([x,x,x,x], dim=0)\n","x_stacked"]},{"cell_type":"markdown","metadata":{"id":"xuieVnUoRHcq"},"source":["# Squeezing and Unsqueezing"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1715407860511,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"LsJRzZtuRJwZ","outputId":"09a3ff4a-3df4-405f-93a2-1d5ba9ad40fe"},"outputs":[{"data":{"text/plain":["(tensor([[5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","         [5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","         [5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","         [5., 2., 3., 4., 5., 6., 7., 8., 9.]]),\n"," torch.Size([4, 9]))"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["# torch.squeeze() - removes all single dimensions from a target tensor\n","x_stacked, x_stacked.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cCxwG4PPR-Ny"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":49,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1715407884693,"user":{"displayName":"Varun G","userId":"00704873837361776795"},"user_tz":-330},"id":"RcyMe7fjRdXr"},"outputs":[{"data":{"text/plain":["tensor([[5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","        [5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","        [5., 2., 3., 4., 5., 6., 7., 8., 9.],\n","        [5., 2., 3., 4., 5., 6., 7., 8., 9.]])"]},"execution_count":53,"metadata":{},"output_type":"execute_result"}],"source":["squeezed = x_stacked.squeeze()\n","squeezed"]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyNcYjLWhvmPqzLsr3e/Sndz","gpuType":"T4","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}